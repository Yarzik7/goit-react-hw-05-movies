{"version":3,"file":"static/js/347.c435f006.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Container/Container.styled.js","components/Section/Container/Container.jsx","components/Section/Section.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","api/getMovieDetails.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MoviesDetailsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst SectionStyles = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nconst SectionTitleStyled = styled.h1`\n  margin-bottom: 40px;\n`;\n\nexport { SectionStyles, SectionTitleStyled };\n","import styled from '@emotion/styled';\n\nconst ContainerStyles = styled.div`\n  position: relative;\n  width: 1500px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { ContainerStyles };\n","import PropTypes from 'prop-types';\nimport { ContainerStyles } from './Container.styled';\n\nconst Container = ({ children }) => <ContainerStyles>{children}</ContainerStyles>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport { SectionStyles, SectionTitleStyled } from './Section.styled';\nimport { Container } from './Container/Container';\n\nconst Section = ({ children, title = '' }) => {\n  return (\n    <SectionStyles>\n      <Container>\n        {title && <SectionTitleStyled>{title}</SectionTitleStyled>}\n        {children}\n      </Container>\n    </SectionStyles>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport {Section};","import styled from '@emotion/styled';\n\nconst GoBackBtnStyled = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  min-height: 30px;\n  margin-bottom: 25px;\n\n  border: none;\n  background-color: #000;\n  color: #fff;\n\n  cursor: pointer;\n`;\n\nconst MovieGenerallInfoStyled = styled.div`\n  display: flex;\n  gap: 30px;\n\n  margin-bottom: 15px;\n`;\n\nconst MovieTitleStyled = styled.h1`\n  margin-bottom: 40px;\n`;\n\nconst VoteAvarageStyled = styled.p`\n  margin-bottom: 40px;\n`;\n\nconst PartInfoContainerStyled = styled.div`\n  margin-bottom: 40px;\n`;\n\nconst InfoTitle = styled.h3`\n  margin-bottom: 40px;\n`;\n\nconst AddInfoContainerStyled = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  margin-bottom: 40px;\n\n  border-top: 1px solid #000;\n  border-bottom: 1px solid #000;\n`;\nconst AddInfoTitleStyled = styled.h2`\n  margin-bottom: 20px;\n`;\n\nconst InfoLinksListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport {\n  MovieGenerallInfoStyled,\n  MovieTitleStyled,\n  VoteAvarageStyled,\n  PartInfoContainerStyled,\n  InfoTitle,\n  AddInfoContainerStyled,\n  GoBackBtnStyled,\n  AddInfoTitleStyled,\n  InfoLinksListStyled,\n};\n","import { Link, Outlet} from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MovieGenerallInfoStyled,\n  MovieTitleStyled,\n  VoteAvarageStyled,\n  PartInfoContainerStyled,\n  InfoTitle,\n  AddInfoContainerStyled,\n  AddInfoTitleStyled,\n  InfoLinksListStyled,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport plugPosterMovie from '../../images/plug-movie-poster.png'\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesDetails = ({ movie}) => {\n  const { poster_path, title, vote_average, overview } = movie;\n\n  return (\n    <>\n      <MovieGenerallInfoStyled>\n        <div>\n          <img\n            src={\n              poster_path ? `${baseImageUrl}${poster_path}` : plugPosterMovie\n            }\n            alt={`${title}`}\n          />\n        </div>\n\n        <div>\n          <MovieTitleStyled>{title}</MovieTitleStyled>\n          <VoteAvarageStyled>Vote average: {vote_average}</VoteAvarageStyled>\n\n          <PartInfoContainerStyled>\n            <InfoTitle>Overview</InfoTitle>\n            <p>{overview}</p>\n          </PartInfoContainerStyled>\n\n          <PartInfoContainerStyled>\n            <InfoTitle>Genres</InfoTitle>\n            {/* <ul>{genres.map(({name}) => (<li>{name}</li>))}</ul> */}\n          </PartInfoContainerStyled>\n        </div>\n      </MovieGenerallInfoStyled>\n\n      <AddInfoContainerStyled>\n        <AddInfoTitleStyled>Additional Information</AddInfoTitleStyled>\n        <InfoLinksListStyled>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </InfoLinksListStyled>\n      </AddInfoContainerStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMoviesDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n  language: 'en-US',\n};\n\nasync function getMovieDetails(id) {\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`movie/${id}?${parameters}`);\n  \n  // if (!response.data.title) {\n  //   return Promise.reject(new Error(`No movie with id: ${id}!`));\n  // }\n\n  return response.data;\n}\n\nexport default getMovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst BackLinkStyled = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  width: 150px;\n  min-height: 40px;\n  margin-bottom: 25px;\n\n  text-transform: uppercase;\n\n  border: none;\n  background-color: #000;\n  color: #fff;\n`;\n\nexport {BackLinkStyled}","import { BackLinkStyled } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n  console.log(to);\n  return <BackLinkStyled to={to}>{children}</BackLinkStyled>;\n};\n\nBackLink.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { BackLink };\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MoviesDetails from 'components/MovieDetails/MovieDetails';\nimport getMovieDetails from 'api/getMovieDetails';\nimport { Section } from 'components/Section/Section';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nconst MoviesDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  console.log(location);\n  console.log(backLinkHref);\n  console.log(typeof backLinkHref);\n\n  useEffect(() => {\n    const responseResolved = movie => {\n      setMovie(movie);\n    };\n\n    const responseRejected = error => {\n      console.log(error.message);\n    };\n\n    getMovieDetails(movieId).then(responseResolved).catch(responseRejected);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Section>\n        <BackLink to={backLinkHref}>\n          <HiArrowLeft size=\"24\" />\n          Go back\n        </BackLink>\n        <MoviesDetails movie={movie} />\n      </Section>\n    </main>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["SectionStyles","styled","SectionTitleStyled","ContainerStyles","Container","children","Section","title","MovieGenerallInfoStyled","MovieTitleStyled","VoteAvarageStyled","PartInfoContainerStyled","InfoTitle","AddInfoContainerStyled","AddInfoTitleStyled","InfoLinksListStyled","movie","poster_path","vote_average","overview","src","plugPosterMovie","alt","to","Suspense","fallback","Loader","requestParameters","api_key","language","getMovieDetails","id","parameters","URLSearchParams","axios","response","data","BackLinkStyled","Link","BackLink","console","log","movieId","useParams","useState","setMovie","location","useLocation","backLinkHref","state","from","useEffect","then","catch","error","message","size"],"sourceRoot":""}