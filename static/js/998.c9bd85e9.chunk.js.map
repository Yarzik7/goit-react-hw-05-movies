{"version":3,"file":"static/js/998.c9bd85e9.chunk.js","mappings":"wNAEMA,EAAkBC,EAAAA,EAAAA,GAAH,oEAIfC,EAAeD,EAAAA,EAAAA,IAAH,gD,mBC0BlB,EAzBkB,SAAC,GAAyC,IAAvCE,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,UAAkC,IAAvBC,YAAAA,OAAuB,MAAT,GAAS,EACnDC,GAAWC,EAAAA,EAAAA,MAIjB,OAFAC,QAAQC,IAAIH,IAGV,SAACN,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMN,GAA1C,WACE,SAACJ,EAAD,CACEW,IAAKR,EAAW,UAXL,mCAWK,OAAqBA,GAAgBS,EACrDC,IAAKX,KAGP,wBAAKA,QAIZ,ECtBKY,EAAkBf,EAAAA,EAAAA,GAAH,4ECEfgB,EAAY,SAAC,GAAD,IAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMd,EAApB,EAAoBA,YAApB,OAChB,SAAC,EAAD,CAEEF,GAAIA,EACJC,UAAWc,GAASC,EACpBd,YAAaA,GAHRF,EAFS,EAwBlB,EAfmB,SAAC,GAAgB,IAAdiB,EAAa,EAAbA,OACpB,OAAO,SAACJ,EAAD,UAAkBI,EAAOC,IAAIJ,IACrC,C,mFCbKK,EAAgBrB,EAAAA,EAAAA,QAAH,uEAKbsB,EAAqBtB,EAAAA,EAAAA,GAAH,gDCLlBuB,EAAkBvB,EAAAA,EAAAA,IAAH,mI,SCCfwB,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,SAACF,EAAD,UAAkBE,GAApC,ECCZC,EAAU,SAAC,GAA8B,IAA5BD,EAA2B,EAA3BA,SAA2B,IAAjBR,MAAAA,OAAiB,MAAT,GAAS,EAC5C,OACE,SAACI,EAAD,WACE,UAACG,EAAD,WACGP,IAAS,SAACK,EAAD,UAAqBL,IAC9BQ,MAIR,C,yHCXKE,EAAoB,CACxBC,QAAS,oCAKIC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6FACQC,EAAa,IAAIC,gBAAgBJ,GADzC,SAGyBK,EAAAA,EAAAA,IAAA,2BAA8BF,IAHvD,cAGQG,EAHR,yBASSA,EAASC,KAAKC,SATvB,kEAFAH,EAAAA,EAAAA,SAAAA,QAAyB,gCAczB,MAdA,WAEeH,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,sCCqBf,EAxBiB,WACf,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WASRV,IAAcW,MARW,SAAArB,GACvBmB,EAAkBnB,EACnB,IAMoCsB,OAJZ,SAAAC,GACvBnC,QAAQC,IAAIkC,EAAMC,QACnB,GAGF,GAAE,KAGD,2BACE,SAACjB,EAAA,EAAD,CAAST,MAAM,iBAAf,UACE,SAAC2B,EAAA,EAAD,CAAYzB,OAAM,OAAEkB,QAAF,IAAEA,EAAAA,EAAkB,QAI7C,C","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js","components/Section/Container/Container.styled.js","components/Section/Container/Container.jsx","components/Section/Section.jsx","api/getTrending.js","pages/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst MovieCardStyled = styled.li`\n  flex-basis: calc((100% - 3 * 30px) / 4);\n`;\n\nconst PosterStyled = styled.img`\n  margin-bottom: 15px;\n`\n\nexport { MovieCardStyled, PosterStyled };\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieCardStyled, PosterStyled } from './MovieCard.styled';\nimport plugPosterMovie from '../../images/plug-movie-poster.png';\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieCard = ({ id, movieName, poster_path = \"\" }) => {\n  const location = useLocation();\n\n  console.log(location);\n\n  return (\n    <MovieCardStyled>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <PosterStyled\n          src={poster_path ? `${baseImageUrl}${poster_path}` : plugPosterMovie}\n          alt={movieName}\n        />\n\n        <h2>{movieName}</h2>\n      </Link>\n    </MovieCardStyled>\n  );\n};\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  movieName: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nconst MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport { MovieListStyled };\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\nimport { MovieListStyled } from './MovieList.styled';\n\nconst mapMovies = ({ id, title, name, poster_path }) => (\n  <MovieCard\n    key={id}\n    id={id}\n    movieName={title || name}\n    poster_path={poster_path}\n  />\n);\n\nconst MoviesList = ({ movies }) => {\n  return <MovieListStyled>{movies.map(mapMovies)}</MovieListStyled>;\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nconst SectionStyles = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nconst SectionTitleStyled = styled.h1`\n  margin-bottom: 40px;\n`;\n\nexport { SectionStyles, SectionTitleStyled };\n","import styled from '@emotion/styled';\n\nconst ContainerStyles = styled.div`\n  position: relative;\n  width: 1500px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { ContainerStyles };\n","import PropTypes from 'prop-types';\nimport { ContainerStyles } from './Container.styled';\n\nconst Container = ({ children }) => <ContainerStyles>{children}</ContainerStyles>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport { SectionStyles, SectionTitleStyled } from './Section.styled';\nimport { Container } from './Container/Container';\n\nconst Section = ({ children, title = '' }) => {\n  return (\n    <SectionStyles>\n      <Container>\n        {title && <SectionTitleStyled>{title}</SectionTitleStyled>}\n        {children}\n      </Container>\n    </SectionStyles>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport {Section};","import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n};\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getTrending() {\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`trending/all/day?${parameters}`);\n\n  // if (!response.data.results.length) {\n  //   return Promise.reject(new Error(`No trending movies today!`));\n  // }\n\n  return response.data.results;\n}\n\nexport default getTrending;\n","import getTrending from 'api/getTrending';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Section } from 'components/Section/Section';\nimport { useEffect, useState } from 'react';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const responseResolved = movies => {\n      setTrendingMovies(movies);\n    };\n\n    const responseRejected = error => {\n      console.log(error.message);\n    };\n\n    getTrending().then(responseResolved).catch(responseRejected);\n  }, []);\n\n  return (\n    <main>\n      <Section title=\"Trending today\">\n        <MoviesList movies={trendingMovies ?? []} />\n      </Section>\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["MovieCardStyled","styled","PosterStyled","id","movieName","poster_path","location","useLocation","console","log","to","state","from","src","plugPosterMovie","alt","MovieListStyled","mapMovies","title","name","movies","map","SectionStyles","SectionTitleStyled","ContainerStyles","Container","children","Section","requestParameters","api_key","getTrending","parameters","URLSearchParams","axios","response","data","results","useState","trendingMovies","setTrendingMovies","useEffect","then","catch","error","message","MoviesList"],"sourceRoot":""}