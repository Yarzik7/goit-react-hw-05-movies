{"version":3,"file":"static/js/347.69b949e0.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Container/Container.styled.js","components/Section/Container/Container.jsx","components/Section/Section.jsx","constants/constants.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","api/getMovieDetails.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MoviesDetailsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst SectionStyles = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nconst SectionTitleStyled = styled.h1`\n  margin-bottom: 40px;\n`;\n\nexport { SectionStyles, SectionTitleStyled };\n","import styled from '@emotion/styled';\n\nconst ContainerStyles = styled.div`\n  position: relative;\n  width: 1500px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { ContainerStyles };\n","import PropTypes from 'prop-types';\nimport { ContainerStyles } from './Container.styled';\n\nconst Container = ({ children }) => <ContainerStyles>{children}</ContainerStyles>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport { SectionStyles, SectionTitleStyled } from './Section.styled';\nimport { Container } from './Container/Container';\n\nconst Section = ({ children, title = '' }) => {\n  return (\n    <SectionStyles>\n      <Container>\n        {title && <SectionTitleStyled>{title}</SectionTitleStyled>}\n        {children}\n      </Container>\n    </SectionStyles>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport {Section};","const baseImageUrl = 'https://image.tmdb.org/t/p/w500';\nconst NOREVIEWSMESSAGE = \"We don't have any reviews for this movie!\"\nconst NOCASTSMESSAGE = \"We don't have info about cast for this movie!\";\nconst NOMOVIESMESSAGE = \"We don't have movies by query: \";\n\nexport { baseImageUrl, NOREVIEWSMESSAGE, NOCASTSMESSAGE, NOMOVIESMESSAGE };","import styled from '@emotion/styled';\n\nconst GoBackBtnStyled = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  min-height: 30px;\n  margin-bottom: 25px;\n\n  border: none;\n  background-color: #000;\n  color: #fff;\n\n  cursor: pointer;\n`;\n\nconst MovieGenerallInfoStyled = styled.div`\n  display: flex;\n  gap: 30px;\n\n  margin-bottom: 15px;\n`;\n\nconst MovieTitleStyled = styled.h1`\n  margin-bottom: 40px;\n`;\n\nconst VoteAvarageStyled = styled.p`\n  margin-bottom: 40px;\n`;\n\nconst PartInfoContainerStyled = styled.div`\n  margin-bottom: 40px;\n`;\n\nconst InfoTitle = styled.h3`\n  margin-bottom: 40px;\n`;\n\nconst AddInfoContainerStyled = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  margin-bottom: 40px;\n\n  border-top: 1px solid #000;\n  border-bottom: 1px solid #000;\n`;\nconst AddInfoTitleStyled = styled.h2`\n  margin-bottom: 20px;\n`;\n\nconst InfoLinksListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst GenresListStyled = styled.ul`\n display: flex;\n gap: 20px;\n`\n\nexport {\n  MovieGenerallInfoStyled,\n  MovieTitleStyled,\n  VoteAvarageStyled,\n  PartInfoContainerStyled,\n  InfoTitle,\n  AddInfoContainerStyled,\n  GoBackBtnStyled,\n  AddInfoTitleStyled,\n  InfoLinksListStyled,\n  GenresListStyled,\n};\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  MovieGenerallInfoStyled,\n  MovieTitleStyled,\n  VoteAvarageStyled,\n  PartInfoContainerStyled,\n  InfoTitle,\n  AddInfoContainerStyled,\n  AddInfoTitleStyled,\n  InfoLinksListStyled,\n  GenresListStyled,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport plugPosterMovie from '../../images/plug-movie-poster.png';\nimport { baseImageUrl } from 'constants/constants';\n\nconst MoviesDetails = ({ movie }) => {\n  const { poster_path, title, vote_average, overview, genres = [] } = movie;\n\n  return (\n    <>\n      <MovieGenerallInfoStyled>\n        <div>\n          <img\n            src={\n              poster_path ? `${baseImageUrl}${poster_path}` : plugPosterMovie\n            }\n            alt={`${title}`}\n          />\n        </div>\n\n        <div>\n          <MovieTitleStyled>{title}</MovieTitleStyled>\n          <VoteAvarageStyled>Vote average: {vote_average}</VoteAvarageStyled>\n\n          <PartInfoContainerStyled>\n            <InfoTitle>Overview</InfoTitle>\n            <p>{overview}</p>\n          </PartInfoContainerStyled>\n\n          <PartInfoContainerStyled>\n            <InfoTitle>Genres</InfoTitle>\n            <GenresListStyled>\n              {genres.map(({ name, id }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </GenresListStyled>\n          </PartInfoContainerStyled>\n        </div>\n      </MovieGenerallInfoStyled>\n\n      <AddInfoContainerStyled>\n        <AddInfoTitleStyled>Additional Information</AddInfoTitleStyled>\n        <InfoLinksListStyled>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </InfoLinksListStyled>\n      </AddInfoContainerStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nMoviesDetails.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n  language: 'en-US',\n};\n\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nasync function getMovieDetails(id) {\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`${baseURL}movie/${id}?${parameters}`);\n\n  return response.data;\n}\n\nexport default getMovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst BackLinkStyled = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  width: 150px;\n  min-height: 40px;\n  margin-bottom: 25px;\n\n  text-transform: uppercase;\n\n  border: none;\n  background-color: #000;\n  color: #fff;\n`;\n\nexport {BackLinkStyled}","import { BackLinkStyled } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ to, children }) => {\n  return <BackLinkStyled to={to}>{children}</BackLinkStyled>;\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport { BackLink };\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MoviesDetails from 'components/MovieDetails/MovieDetails';\nimport getMovieDetails from 'api/getMovieDetails';\nimport { Section } from 'components/Section/Section';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nconst MoviesDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n  const [prevPage] = useState(backLinkHref);\n\n  useEffect(() => {\n    const responseResolved = movie => {\n      setMovie(movie);\n    };\n\n    const responseRejected = error => {\n      console.log(error.message);\n    };\n\n    getMovieDetails(movieId).then(responseResolved).catch(responseRejected);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Section>\n        <BackLink to={prevPage}>\n          <HiArrowLeft size=\"24\" />\n          Go back\n        </BackLink>\n        <MoviesDetails movie={movie} />\n      </Section>\n    </main>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["SectionStyles","styled","SectionTitleStyled","ContainerStyles","Container","children","Section","title","baseImageUrl","NOREVIEWSMESSAGE","NOCASTSMESSAGE","NOMOVIESMESSAGE","MovieGenerallInfoStyled","MovieTitleStyled","VoteAvarageStyled","PartInfoContainerStyled","InfoTitle","AddInfoContainerStyled","AddInfoTitleStyled","InfoLinksListStyled","GenresListStyled","movie","poster_path","vote_average","overview","genres","src","plugPosterMovie","alt","map","name","id","to","Suspense","fallback","Loader","requestParameters","api_key","language","baseURL","getMovieDetails","parameters","URLSearchParams","axios","response","data","BackLinkStyled","Link","BackLink","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","prevPage","useEffect","then","catch","error","console","log","message","size"],"sourceRoot":""}