{"version":3,"file":"static/js/122.516cfb06.chunk.js","mappings":"oOAEMA,EAAoB,CACxBC,QAAS,mCACTC,SAAU,SAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAuBC,GAAvB,gFACQC,EAAa,IAAIC,gBAAgBN,GADzC,SAGyBO,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCC,IAH1D,WAGQG,EAHR,QAKgBC,KAAKC,KAAKC,OAL1B,yCAMWC,QAAQC,OAAO,IAAIC,MAAJ,qCAAwCV,EAAxC,QAN1B,gCASSI,EAASC,KAAKC,MATvB,kEAYA,I,IAAA,EAjBA,SAKuB,GAARP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,kBCLTY,EAAiBC,EAAAA,EAAAA,GAAH,+H,SCiBpB,EAhBiB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACtC,OACE,UAACJ,EAAD,YACE,gBAAKK,IAAG,yCAAoCF,GAAgBG,IAAKJ,KACjE,wBAAKA,KACL,wCAAgBE,OAGrB,E,kBCTKG,EAAiBN,EAAAA,EAAAA,GAAH,4ECIdO,EAAU,SAAC,GAAD,IAAEnB,EAAF,EAAEA,GAAIa,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,UAA1B,OAAyC,SAAC,EAAD,CAAoBF,KAAMA,EAAMC,aAAcA,EAAcC,UAAWA,GAAvDf,EAAzD,EAqBhB,EAnBa,WACT,IAAQoB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOhB,EAAP,KAAaiB,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WASLzB,EAAQqB,GAASK,MARQ,SAAAnB,GACvBiB,EAAQjB,EACT,IAMuCoB,OAJf,SAAAC,GACvBC,QAAQC,IAAIF,EAAMG,QACnB,GAGL,GAAE,CAACV,KAEG,SAACF,EAAD,UAAiBZ,EAAKyB,IAAIZ,IACpC,C","sources":["api/getCast.js","components/CastItem/CastItem.styled.js","components/CastItem/CastItem.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n  language: 'en-US',\n};\n\nasync function getCast(id) {\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`movie/${id}/credits?${parameters}`);\n\n  if (!response.data.cast.length) {\n    return Promise.reject(new Error(`No cast for movie with id: ${id}!`));\n  }\n\n  return response.data.cast;\n}\n\nexport default getCast;\n","import styled from '@emotion/styled';\n\nconst CastItemStyled = styled.li`\n  flex-basis: calc((100% - 3 * 30px) / 4);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport { CastItemStyled };\n","import PropTypes from 'prop-types';\nimport { CastItemStyled } from './CastItem.styled';\n\nconst CastItem = ({ name, profile_path, character }) => {\n  return (\n    <CastItemStyled>\n      <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} />\n      <h3>{name}</h3>\n      <h4>Character: {character}</h4>\n    </CastItemStyled>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  profile_path: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n\nexport default CastItem;\n","import styled from '@emotion/styled';\n\nconst CastListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport { CastListStyled };\n","import getCast from \"api/getCast\";\nimport CastItem from \"components/CastItem/CastItem\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CastListStyled } from \"./Cast.styled\";\n\nconst mapCast = ({id, name, profile_path, character}) => <CastItem key={ id} name={name} profile_path={profile_path} character={character} />\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n         const responseResolved = cast => {\n           setCast(cast);\n         };\n\n         const responseRejected = error => {\n           console.log(error.message);\n         };\n\n         getCast(movieId).then(responseResolved).catch(responseRejected);\n    }, [movieId])\n\n    return <CastListStyled>{cast.map(mapCast)}</CastListStyled>;\n}\n\nexport default Cast;"],"names":["requestParameters","api_key","language","getCast","id","parameters","URLSearchParams","axios","response","data","cast","length","Promise","reject","Error","CastItemStyled","styled","name","profile_path","character","src","alt","CastListStyled","mapCast","movieId","useParams","useState","setCast","useEffect","then","catch","error","console","log","message","map"],"sourceRoot":""}