{"version":3,"file":"static/js/807.1d2ea9c4.chunk.js","mappings":"oOAEMA,EAAoB,CACxBC,QAAS,mCACTC,SAAU,QACVC,KAAM,GAGOC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8FAA8BF,EAA9B,+BAAqC,EACnCH,EAAkBG,KAAOA,EACnBG,EAAa,IAAIC,gBAAgBP,GAFzC,SAIyBQ,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCC,IAJ1D,WAIQG,EAJR,QAMgBC,KAAKC,QAAQC,OAN7B,yCAOWC,QAAQC,OAAO,IAAIC,MAAJ,wCAA2CV,EAA3C,QAP1B,gCAUSI,EAASC,KAAKC,SAVvB,mEAaA,MAnBA,SAM0B,GAAXP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SCCf,EATmB,SAAC,GAAyB,IAAvBY,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5B,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAGT,E,kBCFKC,EAAa,SAAC,GAAD,IAAGb,EAAH,EAAGA,GAAIW,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACjB,SAAC,EAAD,CAEED,OAAQA,EACRC,QAASA,GAFJZ,EAFU,EA2BnB,EAnBgB,WACZ,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WASRpB,EAAWe,GAASM,MARK,SAAAH,GACvBC,EAAWD,EACZ,IAM0CI,OAJlB,SAAAC,GACvBC,QAAQC,IAAIF,EAAMG,QACnB,GAGF,GAAE,CAACX,KAEG,wBAAKG,EAAQS,IAAIb,IAC3B,C","sources":["api/getReviews.js","components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n  language: 'en-US',\n  page: 1,\n};\n\nasync function getReviews(id, page = 1) {\n  requestParameters.page = page;\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`movie/${id}/reviews?${parameters}`);\n\n  if (!response.data.results.length) {\n    return Promise.reject(new Error(`No reviews for movie with id: ${id}!`));\n  }\n\n  return response.data.results;\n}\n\nexport default getReviews;\n","const ReviewItem = ({ author, content }) => {\n  return (\n    <li>\n      <h3>{author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nexport default ReviewItem;\n","import getReviews from \"api/getReviews\";\nimport ReviewItem from \"components/ReviewItem/ReviewItem\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst mapReviews = ({ id, author, content }) => (\n  <ReviewItem\n    key={id}\n    author={author}\n    content={content}\n  />\n);\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n      const responseResolved = reviews => {\n        setReviews(reviews);\n      };\n\n      const responseRejected = error => {\n        console.log(error.message);\n      };\n\n      getReviews(movieId).then(responseResolved).catch(responseRejected);\n    }, [movieId]);\n\n    return <ul>{reviews.map(mapReviews)}</ul>;\n};\n\nexport default Reviews;\n"],"names":["requestParameters","api_key","language","page","getReviews","id","parameters","URLSearchParams","axios","response","data","results","length","Promise","reject","Error","author","content","mapReviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","catch","error","console","log","message","map"],"sourceRoot":""}