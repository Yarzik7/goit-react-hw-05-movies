{"version":3,"file":"static/js/996.82b59929.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.js","components/Section/Container/Container.styled.js","components/Section/Container/Container.jsx","components/Section/Section.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","api/getMovies.js","pages/MoviesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst MovieCardStyled = styled.li`\n  flex-basis: calc((100% - 3 * 30px) / 4);\n`;\n\nconst PosterStyled = styled.img`\n  margin-bottom: 15px;\n`\n\nexport { MovieCardStyled, PosterStyled };\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieCardStyled, PosterStyled } from './MovieCard.styled';\n\nconst MovieCard = ({ id, movieName, poster_path }) => {\nconst location = useLocation();\n\n  return (\n    <MovieCardStyled>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <PosterStyled\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={movieName}\n        />\n\n        <h2>{movieName}</h2>\n      </Link>\n    </MovieCardStyled>\n  );\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\n\nconst MovieListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport { MovieListStyled };\n","import MovieCard from \"components/MovieCard/MovieCard\";\nimport { MovieListStyled } from \"./MovieList.styled\";\n\nconst mapMovies = ({ id, title, name, poster_path }) => (\n  <MovieCard\n    key={id}\n    id={id}\n    movieName={title || name}\n    poster_path={poster_path}\n  />\n);\n\nconst MoviesList = ({ movies }) => {\n  return <MovieListStyled>{movies.map(mapMovies)}</MovieListStyled>;\n};\n\nexport default MoviesList;","import styled from '@emotion/styled';\n\nconst SectionStyles = styled.section`\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nconst SectionTitleStyled = styled.h1`\n  margin-bottom: 40px;\n`;\n\nexport { SectionStyles, SectionTitleStyled };\n","import styled from '@emotion/styled';\n\nconst ContainerStyles = styled.div`\n  position: relative;\n  width: 1500px;\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport { ContainerStyles };\n","import PropTypes from 'prop-types';\nimport { ContainerStyles } from './Container.styled';\n\nconst Container = ({ children }) => <ContainerStyles>{children}</ContainerStyles>;\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport { SectionStyles, SectionTitleStyled } from './Section.styled';\nimport { Container } from './Container/Container';\n\nconst Section = ({ children, title }) => {\n  return (\n    <SectionStyles>\n      <Container>\n        {title && <SectionTitleStyled>{title}</SectionTitleStyled>}\n        {children}\n      </Container>\n    </SectionStyles>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport {Section};","import styled from '@emotion/styled';\n\nconst SearchBarStyled = styled.form`\n  margin: 0 auto;\n`;\n\nconst InputStyled = styled.input`\n  min-width: 500px;\n  height: 23px;\n\n  padding-left: 8px;\n  margin-right: 5px;\n\n  border: 1px solid #000;\n\n  outline: none;\n`;\n\nconst ButtonSubmitStyled = styled.button`\n  width: 80px;\n  height: 28px;\n\n  background-color: #000;\n  color: #fff;\n\n  border: none;\n\n  outline: none;\n\n  cursor: pointer;\n`;\n\nexport { SearchBarStyled, InputStyled, ButtonSubmitStyled };\n","import { useState } from 'react';\nimport {\n  InputStyled,\n  SearchBarStyled,\n  ButtonSubmitStyled,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ handleFormSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = ({ currentTarget: { value } }) => setQuery(value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!query.trim()) {\n      alert('Query is empty!');\n      return;\n    }\n\n    handleFormSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <SearchBarStyled onSubmit={handleSubmit}>\n      <InputStyled\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleQueryChange}\n        value={query}\n      />\n      <ButtonSubmitStyled>Search</ButtonSubmitStyled>\n    </SearchBarStyled>\n  );\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n  language: 'en-US',\n  page: 1,\n  query: '',\n  include_adult: false,\n};\n\nasync function getMovies(query, page = 1) {\n  requestParameters.query = query;\n  requestParameters.page = page;\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`search/movie?${parameters}`);\n\n  if (!response.data.results.length) {\n    return Promise.reject(new Error(`No movies by query: ${query}!`));\n  }\n\n  return response.data.results;\n}\n\nexport default getMovies;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport getMovies from 'api/getMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport { Section } from 'components/Section/Section';\n\nconst MoviesPage = () => {\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const responseResolved = movies => {\n      setMovies(movies);\n    };\n\n    const responseRejected = error => {\n      console.log(error.message);\n    };\n\n    getMovies(query, page).then(responseResolved).catch(responseRejected);\n  }, [page, query]);\n\n  const updateQueryString = query => {\n    const nextParams = query ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleFormSubmit = query => {\n    updateQueryString(query);\n    setPage(1);\n  };\n\n  return (\n    <main>\n      <Section>\n        <Searchbar handleFormSubmit={handleFormSubmit} />\n      </Section>\n      {!!movies.length && (\n        <Section>\n          <MoviesList movies={movies} />\n        </Section>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MovieCardStyled","styled","PosterStyled","id","movieName","poster_path","location","useLocation","to","state","from","src","alt","MovieListStyled","mapMovies","title","name","movies","map","SectionStyles","SectionTitleStyled","ContainerStyles","Container","children","Section","SearchBarStyled","InputStyled","ButtonSubmitStyled","handleFormSubmit","useState","query","setQuery","onSubmit","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","value","currentTarget","requestParameters","api_key","language","page","include_adult","getMovies","parameters","URLSearchParams","axios","response","data","results","length","Promise","reject","Error","setPage","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","catch","error","console","log","message","updateQueryString","MoviesList"],"sourceRoot":""}