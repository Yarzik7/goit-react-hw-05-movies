{"version":3,"file":"static/js/461.df281990.chunk.js","mappings":"mOA4CA,EAzCsB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACfC,EAA8CD,EAA9CC,YAAaC,EAAiCF,EAAjCE,MAAOC,EAA0BH,EAA1BG,aAAcC,EAAYJ,EAAZI,SAE1C,OACE,4BACE,yCACA,gBACEC,IAAG,yCAAoCJ,GACvCK,IAAG,UAAKJ,MAEV,wBAAKA,KACL,0CAAkBC,MAElB,4BACE,sCACA,uBAAIC,QAGN,0BACE,sCAIF,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMG,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,E,oCCxCKC,EAAoB,CACxBC,QAAS,mCACTC,SAAU,SAGGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gFACQC,EAAa,IAAIC,gBAAgBN,GADzC,SAGyBO,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,YAAyBC,IAHlD,WAGQG,EAHR,QAKgBC,KAAKjB,MALrB,yCAMWkB,QAAQC,OAAO,IAAIC,MAAJ,4BAA+BR,EAA/B,QAN1B,gCASSI,EAASC,MATlB,kEAYA,MAjBA,SAK+B,GAAhBN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECiBf,EAnB0B,WACxB,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOzB,EAAP,KAAc0B,EAAd,KAcF,OAZEC,EAAAA,EAAAA,YAAU,WASRd,EAAgBU,GAASK,MARA,SAAA5B,GACvB0B,EAAS1B,EACV,IAM+C6B,OAJvB,SAAAC,GACvBC,QAAQC,IAAIF,EAAMG,QACnB,GAGF,GAAE,CAACV,KAEC,SAAC,EAAD,CAAeT,GAAIS,EAASvB,MAAOA,GAC3C,C","sources":["components/MovieDetails/MovieDetails.jsx","api/getMovieDetails.js","pages/MoviesDetailsPage.jsx"],"sourcesContent":["import { Link, Outlet } from \"react-router-dom\";\nimport { Suspense } from \"react\";\n\nconst MoviesDetails = ({ movie }) => {\n  const { poster_path, title, vote_average, overview} = movie;\n  //console.log(movie);\n  return (\n    <div>\n      <button>Go back</button>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        alt={`${title}`}\n      />\n      <h2>{title}</h2>\n      <p>Vote average: {vote_average}</p>\n\n      <div>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n      </div>\n\n      <div>\n        <h3>Genres</h3>\n        {/* <ul>{genres.map(({name}) => (<li>{name}</li>))}</ul> */}\n      </div>\n\n      <div>\n        <h3>Additional Information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst requestParameters = {\n  api_key: 'a54c3783addcfd6f83ea014e2d49ad26',\n  language: 'en-US',\n};\n\nasync function getMovieDetails(id) {\n  const parameters = new URLSearchParams(requestParameters); // Отримує частину url з параметрами\n\n  const response = await axios.get(`movie/${id}?${parameters}`);\n  \n  if (!response.data.title) {\n    return Promise.reject(new Error(`No movie with id: ${id}!`));\n  }\n\n  return response.data;\n}\n\nexport default getMovieDetails;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport MoviesDetails from 'components/MovieDetails/MovieDetails';\nimport getMovieDetails from 'api/getMovieDetails';\n\nconst MoviesDetailsPage = () => {\n  const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    \n    useEffect(() => {\n      const responseResolved = movie => {\n        setMovie(movie);\n      };\n\n      const responseRejected = error => {\n        console.log(error.message);\n      };\n\n      getMovieDetails(movieId).then(responseResolved).catch(responseRejected);\n    }, [movieId]);\n\n  return <MoviesDetails id={movieId} movie={movie} />;\n};\n\nexport default MoviesDetailsPage;\n"],"names":["movie","poster_path","title","vote_average","overview","src","alt","to","Suspense","fallback","requestParameters","api_key","language","getMovieDetails","id","parameters","URLSearchParams","axios","response","data","Promise","reject","Error","movieId","useParams","useState","setMovie","useEffect","then","catch","error","console","log","message"],"sourceRoot":""}